- name: Install Docker and deploy containers
  hosts: all
  become: yes
  vars:
    containers:
      - name: ubuntu_container
        image: ubuntu
        command: sleep infinity  # Keeps the container running
        ports:
          - "3001:80"  # Maps host port 3001 to container port 80
      - name: nginx_container
        image: nginx
        ports:
          - "3002:80"  # Maps host port 3002 to container port 80
      - name: redis_container
        image: redis
        command: redis-server --appendonly yes  # Redis configuration
        ports:
          - "3003:6379"  # Maps host port 3003 to container port 6379

  tasks:
    # Install Docker prerequisites
    - name: Install required packages
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - python3-pip
        state: present
        update_cache: yes

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Install Docker CE
      apt:
        name: docker-ce
        state: present

    - name: Install Docker Python module
      apt:
        name: python3-docker
        state: present

    - name: Ensure Docker service is running
      service:
        name: docker
        state: started
        enabled: yes

    # Pull Docker images
    - name: Pull images
      community.docker.docker_image:
        name: "{{ item.image }}"
        source: pull
      loop: "{{ containers }}"

    # Deploy containers
    - name: Create and start containers
      community.docker.docker_container:
        name: "{{ item.name }}"
        image: "{{ item.image }}"
        command: "{{ item.command | default(omit) }}"
        ports: "{{ item.ports | default(omit) }}"
        state: started
        restart_policy: unless-stopped
      loop: "{{ containers }}"